#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Brada3
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Brada")]
	public partial class BradaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTblShlal(TblShlal instance);
    partial void UpdateTblShlal(TblShlal instance);
    partial void DeleteTblShlal(TblShlal instance);
    partial void InsertTBLSea(TBLSea instance);
    partial void UpdateTBLSea(TBLSea instance);
    partial void DeleteTBLSea(TBLSea instance);
    partial void InsertTBLRestaurant(TBLRestaurant instance);
    partial void UpdateTBLRestaurant(TBLRestaurant instance);
    partial void DeleteTBLRestaurant(TBLRestaurant instance);
    partial void InsertTBLCoffee(TBLCoffee instance);
    partial void UpdateTBLCoffee(TBLCoffee instance);
    partial void DeleteTBLCoffee(TBLCoffee instance);
    partial void InsertTBL_Receive(TBL_Receive instance);
    partial void UpdateTBL_Receive(TBL_Receive instance);
    partial void DeleteTBL_Receive(TBL_Receive instance);
    partial void InsertTbl_Import(Tbl_Import instance);
    partial void UpdateTbl_Import(Tbl_Import instance);
    partial void DeleteTbl_Import(Tbl_Import instance);
    partial void InsertTbl_Item(Tbl_Item instance);
    partial void UpdateTbl_Item(Tbl_Item instance);
    partial void DeleteTbl_Item(Tbl_Item instance);
    partial void InsertTbl_Daily_operation(Tbl_Daily_operation instance);
    partial void UpdateTbl_Daily_operation(Tbl_Daily_operation instance);
    partial void DeleteTbl_Daily_operation(Tbl_Daily_operation instance);
    partial void InsertTBL_Number(TBL_Number instance);
    partial void UpdateTBL_Number(TBL_Number instance);
    partial void DeleteTBL_Number(TBL_Number instance);
    partial void InsertTbl_Order(Tbl_Order instance);
    partial void UpdateTbl_Order(Tbl_Order instance);
    partial void DeleteTbl_Order(Tbl_Order instance);
    partial void InsertTablePlace(TablePlace instance);
    partial void UpdateTablePlace(TablePlace instance);
    partial void DeleteTablePlace(TablePlace instance);
    partial void Insertitem_order(item_order instance);
    partial void Updateitem_order(item_order instance);
    partial void Deleteitem_order(item_order instance);
    partial void InsertTbl_Casheir_name(Tbl_Casheir_name instance);
    partial void UpdateTbl_Casheir_name(Tbl_Casheir_name instance);
    partial void DeleteTbl_Casheir_name(Tbl_Casheir_name instance);
    partial void Insertitem_order1(item_order1 instance);
    partial void Updateitem_order1(item_order1 instance);
    partial void Deleteitem_order1(item_order1 instance);
    partial void InsertTbl_Casheir_Sale(Tbl_Casheir_Sale instance);
    partial void UpdateTbl_Casheir_Sale(Tbl_Casheir_Sale instance);
    partial void DeleteTbl_Casheir_Sale(Tbl_Casheir_Sale instance);
    #endregion
		
		public BradaDataContext() : 
				base(global::Brada3.Properties.Settings.Default.BradaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BradaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BradaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BradaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BradaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TblShlal> TblShlals
		{
			get
			{
				return this.GetTable<TblShlal>();
			}
		}
		
		public System.Data.Linq.Table<TBLSea> TBLSeas
		{
			get
			{
				return this.GetTable<TBLSea>();
			}
		}
		
		public System.Data.Linq.Table<TBLRestaurant> TBLRestaurants
		{
			get
			{
				return this.GetTable<TBLRestaurant>();
			}
		}
		
		public System.Data.Linq.Table<TBLCoffee> TBLCoffees
		{
			get
			{
				return this.GetTable<TBLCoffee>();
			}
		}
		
		public System.Data.Linq.Table<TBL_Receive> TBL_Receives
		{
			get
			{
				return this.GetTable<TBL_Receive>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_Import> Tbl_Imports
		{
			get
			{
				return this.GetTable<Tbl_Import>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_Item> Tbl_Items
		{
			get
			{
				return this.GetTable<Tbl_Item>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_Daily_operation> Tbl_Daily_operations
		{
			get
			{
				return this.GetTable<Tbl_Daily_operation>();
			}
		}
		
		public System.Data.Linq.Table<TBL_Number> TBL_Numbers
		{
			get
			{
				return this.GetTable<TBL_Number>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_Order> Tbl_Orders
		{
			get
			{
				return this.GetTable<Tbl_Order>();
			}
		}
		
		public System.Data.Linq.Table<TablePlace> TablePlaces
		{
			get
			{
				return this.GetTable<TablePlace>();
			}
		}
		
		public System.Data.Linq.Table<item_order> item_orders
		{
			get
			{
				return this.GetTable<item_order>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_Casheir_name> Tbl_Casheir_names
		{
			get
			{
				return this.GetTable<Tbl_Casheir_name>();
			}
		}
		
		public System.Data.Linq.Table<item_order1> item_order1s
		{
			get
			{
				return this.GetTable<item_order1>();
			}
		}
		
		public System.Data.Linq.Table<Tbl_Casheir_Sale> Tbl_Casheir_Sales
		{
			get
			{
				return this.GetTable<Tbl_Casheir_Sale>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.del")]
		public int del([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> _id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.delinCoffee")]
		public int delinCoffee([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> _id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.delinRestaurant")]
		public int delinRestaurant([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> _id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.delinSea")]
		public int delinSea([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> _id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.delinShlal")]
		public int delinShlal([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> _id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateproduct3")]
		public int updateproduct3([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id_new, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string newname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> newquantity, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> newQuantity_Part_Num, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> newcostprice, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> newtotalcost, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> newValidationdate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_new, newname, newquantity, newQuantity_Part_Num, newcostprice, newtotalcost, newValidationdate);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.update_Tbl_Item2")]
		public int update_Tbl_Item2([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id_new, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string newname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> newQuantity_Part_Num, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> new_Packu_Price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> newtotalcost, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> newValidationdate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_new, newname, newQuantity_Part_Num, new_Packu_Price, newtotalcost, newValidationdate);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.insert_tbl_Item")]
		public int insert_tbl_Item([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(60)")] string new_ITem_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> quantit_Num, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> packu_price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pieces_num, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> quantity_int, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> date, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> totalcost)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), new_ITem_Name, quantit_Num, packu_price, pieces_num, quantity_int, date, totalcost);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.insert_tbl_Item2")]
		public int insert_tbl_Item2([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(60)")] string new_ITem_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> quantit_Num, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> packu_price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pieces_num, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> quantity_int, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> date, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> totalcost, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Quantity_Int_Price", DbType="Int")] System.Nullable<int> quantity_Int_Price)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), new_ITem_Name, quantit_Num, packu_price, pieces_num, quantity_int, date, totalcost, quantity_Int_Price);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.update_Tbl_Item3")]
		public int update_Tbl_Item3([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id_new, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string newname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> newQuantity_Part_Num, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> new_Packu_Price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> newPeices_Num, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> newQuantity_Int, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> newQuantity_Int_Price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> newValidationdate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> newtotalcost)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_new, newname, newQuantity_Part_Num, new_Packu_Price, newPeices_Num, newQuantity_Int, newQuantity_Int_Price, newValidationdate, newtotalcost);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.insert_tbl_Import")]
		public int insert_tbl_Import([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> new_receipt_code, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> new_import_date)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), new_receipt_code, new_import_date);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.insert_Daily_Operation2")]
		public int insert_Daily_Operation2([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> newItem_Code, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(60)")] string new_ITem_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> quantit_Num, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> packu_price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> totalcost, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Import_date", DbType="DateTime")] System.Nullable<System.DateTime> import_date, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> receipt_Code)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), newItem_Code, new_ITem_Name, quantit_Num, packu_price, totalcost, import_date, receipt_Code);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.update_Tbl_Daily")]
		public int update_Tbl_Daily([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id_new, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string newname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> newQuantityNum, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> new_Packu_Price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> newtotalcost)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_new, newname, newQuantityNum, new_Packu_Price, newtotalcost);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.delin_Daily_OPeration")]
		public int delin_Daily_OPeration([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> _id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Subtract_Update_Tbl_Item_Daily")]
		public int Subtract_Update_Tbl_Item_Daily([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id_new, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> newQuantity_Num)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_new, newQuantity_Num);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MyProcedure")]
		public int MyProcedure([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(100)")] string name)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MyProcedure1")]
		public int MyProcedure1([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> item_Code, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(100)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cel1, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> cel2, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> cel3, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Daate", DbType="DateTime")] System.Nullable<System.DateTime> daate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> receipt_num)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), item_Code, name, cel1, cel2, cel3, daate, receipt_num);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.update_Addition_Tbl_Daily")]
		public int update_Addition_Tbl_Daily([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id_new, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(60)")] string newname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> newQuantityNum, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> new_Packu_Price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> newtotalcost, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> new_Import_Date, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> new_receipt_Code)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_new, newname, newQuantityNum, new_Packu_Price, newtotalcost, new_Import_Date, new_receipt_Code);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ins_item_order")]
		public int ins_item_order([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> itemid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> o_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> total_cost, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> d, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> tbl_num, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> disc_val, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> tax, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> finalcost, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string pay)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, itemid, o_id, total_cost, d, tbl_num, disc_val, tax, finalcost, pay);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ins_order")]
		public int ins_order1([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> or_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> item_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> count, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> price)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), or_id, item_id, count, price);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ins_tbl_num")]
		public int ins_tbl_num([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> tblid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> num, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> place_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, tblid, num, place_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.del_tbl_num")]
		public int del_tbl_num([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.join_tables_report1")]
		public ISingleResult<join_tables_report1Result> join_tables_report1()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<join_tables_report1Result>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblShlal")]
	public partial class TblShlal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _TBLNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTBLNumberChanging(int value);
    partial void OnTBLNumberChanged();
    #endregion
		
		public TblShlal()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TBLNumber", DbType="Int NOT NULL")]
		public int TBLNumber
		{
			get
			{
				return this._TBLNumber;
			}
			set
			{
				if ((this._TBLNumber != value))
				{
					this.OnTBLNumberChanging(value);
					this.SendPropertyChanging();
					this._TBLNumber = value;
					this.SendPropertyChanged("TBLNumber");
					this.OnTBLNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLSea")]
	public partial class TBLSea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _TBLNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTBLNumberChanging(int value);
    partial void OnTBLNumberChanged();
    #endregion
		
		public TBLSea()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TBLNumber", DbType="Int NOT NULL")]
		public int TBLNumber
		{
			get
			{
				return this._TBLNumber;
			}
			set
			{
				if ((this._TBLNumber != value))
				{
					this.OnTBLNumberChanging(value);
					this.SendPropertyChanging();
					this._TBLNumber = value;
					this.SendPropertyChanged("TBLNumber");
					this.OnTBLNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLRestaurant")]
	public partial class TBLRestaurant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _TBLNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTBLNumberChanging(System.Nullable<int> value);
    partial void OnTBLNumberChanged();
    #endregion
		
		public TBLRestaurant()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TBLNumber", DbType="Int")]
		public System.Nullable<int> TBLNumber
		{
			get
			{
				return this._TBLNumber;
			}
			set
			{
				if ((this._TBLNumber != value))
				{
					this.OnTBLNumberChanging(value);
					this.SendPropertyChanging();
					this._TBLNumber = value;
					this.SendPropertyChanged("TBLNumber");
					this.OnTBLNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLCoffee")]
	public partial class TBLCoffee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _TBLNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTBLNumberChanging(System.Nullable<int> value);
    partial void OnTBLNumberChanged();
    #endregion
		
		public TBLCoffee()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TBLNumber", DbType="Int")]
		public System.Nullable<int> TBLNumber
		{
			get
			{
				return this._TBLNumber;
			}
			set
			{
				if ((this._TBLNumber != value))
				{
					this.OnTBLNumberChanging(value);
					this.SendPropertyChanging();
					this._TBLNumber = value;
					this.SendPropertyChanged("TBLNumber");
					this.OnTBLNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_Receive")]
	public partial class TBL_Receive : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _recieve_num;
		
		private System.Nullable<System.DateTime> _recieve_Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onrecieve_numChanging(int value);
    partial void Onrecieve_numChanged();
    partial void Onrecieve_DateChanging(System.Nullable<System.DateTime> value);
    partial void Onrecieve_DateChanged();
    #endregion
		
		public TBL_Receive()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recieve_num", DbType="Int NOT NULL")]
		public int recieve_num
		{
			get
			{
				return this._recieve_num;
			}
			set
			{
				if ((this._recieve_num != value))
				{
					this.Onrecieve_numChanging(value);
					this.SendPropertyChanging();
					this._recieve_num = value;
					this.SendPropertyChanged("recieve_num");
					this.Onrecieve_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recieve_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> recieve_Date
		{
			get
			{
				return this._recieve_Date;
			}
			set
			{
				if ((this._recieve_Date != value))
				{
					this.Onrecieve_DateChanging(value);
					this.SendPropertyChanging();
					this._recieve_Date = value;
					this.SendPropertyChanged("recieve_Date");
					this.Onrecieve_DateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Import")]
	public partial class Tbl_Import : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _receipt_Code;
		
		private System.DateTime _Import_Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onreceipt_CodeChanging(int value);
    partial void Onreceipt_CodeChanged();
    partial void OnImport_DateChanging(System.DateTime value);
    partial void OnImport_DateChanged();
    #endregion
		
		public Tbl_Import()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receipt_Code", DbType="Int NOT NULL")]
		public int receipt_Code
		{
			get
			{
				return this._receipt_Code;
			}
			set
			{
				if ((this._receipt_Code != value))
				{
					this.Onreceipt_CodeChanging(value);
					this.SendPropertyChanging();
					this._receipt_Code = value;
					this.SendPropertyChanged("receipt_Code");
					this.Onreceipt_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Import_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Import_Date
		{
			get
			{
				return this._Import_Date;
			}
			set
			{
				if ((this._Import_Date != value))
				{
					this.OnImport_DateChanging(value);
					this.SendPropertyChanging();
					this._Import_Date = value;
					this.SendPropertyChanged("Import_Date");
					this.OnImport_DateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Item")]
	public partial class Tbl_Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Item_Name;
		
		private int _Quantity_Num;
		
		private double _Packu_Price;
		
		private int _Peices_Number;
		
		private int _Quantity_Integer;
		
		private int _Quantity_Int_Price;
		
		private System.DateTime _Validation_Date;
		
		private double _TotalCost;
		
		private EntitySet<Tbl_Order> _Tbl_Orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnItem_NameChanging(string value);
    partial void OnItem_NameChanged();
    partial void OnQuantity_NumChanging(int value);
    partial void OnQuantity_NumChanged();
    partial void OnPacku_PriceChanging(double value);
    partial void OnPacku_PriceChanged();
    partial void OnPeices_NumberChanging(int value);
    partial void OnPeices_NumberChanged();
    partial void OnQuantity_IntegerChanging(int value);
    partial void OnQuantity_IntegerChanged();
    partial void OnQuantity_Int_PriceChanging(int value);
    partial void OnQuantity_Int_PriceChanged();
    partial void OnValidation_DateChanging(System.DateTime value);
    partial void OnValidation_DateChanged();
    partial void OnTotalCostChanging(double value);
    partial void OnTotalCostChanged();
    #endregion
		
		public Tbl_Item()
		{
			this._Tbl_Orders = new EntitySet<Tbl_Order>(new Action<Tbl_Order>(this.attach_Tbl_Orders), new Action<Tbl_Order>(this.detach_Tbl_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_Name", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string Item_Name
		{
			get
			{
				return this._Item_Name;
			}
			set
			{
				if ((this._Item_Name != value))
				{
					this.OnItem_NameChanging(value);
					this.SendPropertyChanging();
					this._Item_Name = value;
					this.SendPropertyChanged("Item_Name");
					this.OnItem_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity_Num", DbType="Int NOT NULL")]
		public int Quantity_Num
		{
			get
			{
				return this._Quantity_Num;
			}
			set
			{
				if ((this._Quantity_Num != value))
				{
					this.OnQuantity_NumChanging(value);
					this.SendPropertyChanging();
					this._Quantity_Num = value;
					this.SendPropertyChanged("Quantity_Num");
					this.OnQuantity_NumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Packu_Price", DbType="Float NOT NULL")]
		public double Packu_Price
		{
			get
			{
				return this._Packu_Price;
			}
			set
			{
				if ((this._Packu_Price != value))
				{
					this.OnPacku_PriceChanging(value);
					this.SendPropertyChanging();
					this._Packu_Price = value;
					this.SendPropertyChanged("Packu_Price");
					this.OnPacku_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Peices_Number", DbType="Int NOT NULL")]
		public int Peices_Number
		{
			get
			{
				return this._Peices_Number;
			}
			set
			{
				if ((this._Peices_Number != value))
				{
					this.OnPeices_NumberChanging(value);
					this.SendPropertyChanging();
					this._Peices_Number = value;
					this.SendPropertyChanged("Peices_Number");
					this.OnPeices_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity_Integer", DbType="Int NOT NULL")]
		public int Quantity_Integer
		{
			get
			{
				return this._Quantity_Integer;
			}
			set
			{
				if ((this._Quantity_Integer != value))
				{
					this.OnQuantity_IntegerChanging(value);
					this.SendPropertyChanging();
					this._Quantity_Integer = value;
					this.SendPropertyChanged("Quantity_Integer");
					this.OnQuantity_IntegerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity_Int_Price", DbType="Int NOT NULL")]
		public int Quantity_Int_Price
		{
			get
			{
				return this._Quantity_Int_Price;
			}
			set
			{
				if ((this._Quantity_Int_Price != value))
				{
					this.OnQuantity_Int_PriceChanging(value);
					this.SendPropertyChanging();
					this._Quantity_Int_Price = value;
					this.SendPropertyChanged("Quantity_Int_Price");
					this.OnQuantity_Int_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Validation_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Validation_Date
		{
			get
			{
				return this._Validation_Date;
			}
			set
			{
				if ((this._Validation_Date != value))
				{
					this.OnValidation_DateChanging(value);
					this.SendPropertyChanging();
					this._Validation_Date = value;
					this.SendPropertyChanged("Validation_Date");
					this.OnValidation_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCost", DbType="Float NOT NULL")]
		public double TotalCost
		{
			get
			{
				return this._TotalCost;
			}
			set
			{
				if ((this._TotalCost != value))
				{
					this.OnTotalCostChanging(value);
					this.SendPropertyChanging();
					this._TotalCost = value;
					this.SendPropertyChanged("TotalCost");
					this.OnTotalCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Item_Tbl_Order", Storage="_Tbl_Orders", ThisKey="ID", OtherKey="Item_ID")]
		public EntitySet<Tbl_Order> Tbl_Orders
		{
			get
			{
				return this._Tbl_Orders;
			}
			set
			{
				this._Tbl_Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tbl_Orders(Tbl_Order entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Item = this;
		}
		
		private void detach_Tbl_Orders(Tbl_Order entity)
		{
			this.SendPropertyChanging();
			entity.Tbl_Item = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Daily_operation")]
	public partial class Tbl_Daily_operation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Item_Code;
		
		private string _Item_Name;
		
		private int _Quantity_Number;
		
		private double _Packu_Price;
		
		private double _Total_Cost;
		
		private System.DateTime _Import_Date;
		
		private int _receipt_Code;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnItem_CodeChanging(int value);
    partial void OnItem_CodeChanged();
    partial void OnItem_NameChanging(string value);
    partial void OnItem_NameChanged();
    partial void OnQuantity_NumberChanging(int value);
    partial void OnQuantity_NumberChanged();
    partial void OnPacku_PriceChanging(double value);
    partial void OnPacku_PriceChanged();
    partial void OnTotal_CostChanging(double value);
    partial void OnTotal_CostChanged();
    partial void OnImport_DateChanging(System.DateTime value);
    partial void OnImport_DateChanged();
    partial void Onreceipt_CodeChanging(int value);
    partial void Onreceipt_CodeChanged();
    #endregion
		
		public Tbl_Daily_operation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_Code", DbType="Int NOT NULL")]
		public int Item_Code
		{
			get
			{
				return this._Item_Code;
			}
			set
			{
				if ((this._Item_Code != value))
				{
					this.OnItem_CodeChanging(value);
					this.SendPropertyChanging();
					this._Item_Code = value;
					this.SendPropertyChanged("Item_Code");
					this.OnItem_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Item_Name
		{
			get
			{
				return this._Item_Name;
			}
			set
			{
				if ((this._Item_Name != value))
				{
					this.OnItem_NameChanging(value);
					this.SendPropertyChanging();
					this._Item_Name = value;
					this.SendPropertyChanged("Item_Name");
					this.OnItem_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity_Number", DbType="Int NOT NULL")]
		public int Quantity_Number
		{
			get
			{
				return this._Quantity_Number;
			}
			set
			{
				if ((this._Quantity_Number != value))
				{
					this.OnQuantity_NumberChanging(value);
					this.SendPropertyChanging();
					this._Quantity_Number = value;
					this.SendPropertyChanged("Quantity_Number");
					this.OnQuantity_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Packu_Price", DbType="Float NOT NULL")]
		public double Packu_Price
		{
			get
			{
				return this._Packu_Price;
			}
			set
			{
				if ((this._Packu_Price != value))
				{
					this.OnPacku_PriceChanging(value);
					this.SendPropertyChanging();
					this._Packu_Price = value;
					this.SendPropertyChanged("Packu_Price");
					this.OnPacku_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Cost", DbType="Float NOT NULL")]
		public double Total_Cost
		{
			get
			{
				return this._Total_Cost;
			}
			set
			{
				if ((this._Total_Cost != value))
				{
					this.OnTotal_CostChanging(value);
					this.SendPropertyChanging();
					this._Total_Cost = value;
					this.SendPropertyChanged("Total_Cost");
					this.OnTotal_CostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Import_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Import_Date
		{
			get
			{
				return this._Import_Date;
			}
			set
			{
				if ((this._Import_Date != value))
				{
					this.OnImport_DateChanging(value);
					this.SendPropertyChanging();
					this._Import_Date = value;
					this.SendPropertyChanged("Import_Date");
					this.OnImport_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receipt_Code", DbType="Int NOT NULL")]
		public int receipt_Code
		{
			get
			{
				return this._receipt_Code;
			}
			set
			{
				if ((this._receipt_Code != value))
				{
					this.Onreceipt_CodeChanging(value);
					this.SendPropertyChanging();
					this._receipt_Code = value;
					this.SendPropertyChanged("receipt_Code");
					this.Onreceipt_CodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_Numbers")]
	public partial class TBL_Number : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _TBL_ID;
		
		private int _Numbers;
		
		private int _TBLPlace_ID;
		
		private EntitySet<item_order> _item_orders;
		
		private EntitySet<item_order1> _item_order1s;
		
		private EntityRef<TablePlace> _TablePlace;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTBL_IDChanging(int value);
    partial void OnTBL_IDChanged();
    partial void OnNumbersChanging(int value);
    partial void OnNumbersChanged();
    partial void OnTBLPlace_IDChanging(int value);
    partial void OnTBLPlace_IDChanged();
    #endregion
		
		public TBL_Number()
		{
			this._item_orders = new EntitySet<item_order>(new Action<item_order>(this.attach_item_orders), new Action<item_order>(this.detach_item_orders));
			this._item_order1s = new EntitySet<item_order1>(new Action<item_order1>(this.attach_item_order1s), new Action<item_order1>(this.detach_item_order1s));
			this._TablePlace = default(EntityRef<TablePlace>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TBL_ID", DbType="Int NOT NULL")]
		public int TBL_ID
		{
			get
			{
				return this._TBL_ID;
			}
			set
			{
				if ((this._TBL_ID != value))
				{
					this.OnTBL_IDChanging(value);
					this.SendPropertyChanging();
					this._TBL_ID = value;
					this.SendPropertyChanged("TBL_ID");
					this.OnTBL_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numbers", DbType="Int NOT NULL")]
		public int Numbers
		{
			get
			{
				return this._Numbers;
			}
			set
			{
				if ((this._Numbers != value))
				{
					this.OnNumbersChanging(value);
					this.SendPropertyChanging();
					this._Numbers = value;
					this.SendPropertyChanged("Numbers");
					this.OnNumbersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TBLPlace_ID", DbType="Int NOT NULL")]
		public int TBLPlace_ID
		{
			get
			{
				return this._TBLPlace_ID;
			}
			set
			{
				if ((this._TBLPlace_ID != value))
				{
					if (this._TablePlace.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTBLPlace_IDChanging(value);
					this.SendPropertyChanging();
					this._TBLPlace_ID = value;
					this.SendPropertyChanged("TBLPlace_ID");
					this.OnTBLPlace_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_Number_item_order", Storage="_item_orders", ThisKey="ID", OtherKey="TBL_Num")]
		public EntitySet<item_order> item_orders
		{
			get
			{
				return this._item_orders;
			}
			set
			{
				this._item_orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_Number_item_order1", Storage="_item_order1s", ThisKey="ID", OtherKey="TBL_Num")]
		public EntitySet<item_order1> item_order1s
		{
			get
			{
				return this._item_order1s;
			}
			set
			{
				this._item_order1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TablePlace_TBL_Number", Storage="_TablePlace", ThisKey="TBLPlace_ID", OtherKey="ID", IsForeignKey=true)]
		public TablePlace TablePlace
		{
			get
			{
				return this._TablePlace.Entity;
			}
			set
			{
				TablePlace previousValue = this._TablePlace.Entity;
				if (((previousValue != value) 
							|| (this._TablePlace.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TablePlace.Entity = null;
						previousValue.TBL_Numbers.Remove(this);
					}
					this._TablePlace.Entity = value;
					if ((value != null))
					{
						value.TBL_Numbers.Add(this);
						this._TBLPlace_ID = value.ID;
					}
					else
					{
						this._TBLPlace_ID = default(int);
					}
					this.SendPropertyChanged("TablePlace");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_item_orders(item_order entity)
		{
			this.SendPropertyChanging();
			entity.TBL_Number = this;
		}
		
		private void detach_item_orders(item_order entity)
		{
			this.SendPropertyChanging();
			entity.TBL_Number = null;
		}
		
		private void attach_item_order1s(item_order1 entity)
		{
			this.SendPropertyChanging();
			entity.TBL_Number = this;
		}
		
		private void detach_item_order1s(item_order1 entity)
		{
			this.SendPropertyChanging();
			entity.TBL_Number = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Order")]
	public partial class Tbl_Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Order_ID;
		
		private int _Item_ID;
		
		private int _Quantity;
		
		private double _Price;
		
		private EntityRef<Tbl_Item> _Tbl_Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOrder_IDChanging(int value);
    partial void OnOrder_IDChanged();
    partial void OnItem_IDChanging(int value);
    partial void OnItem_IDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnPriceChanging(double value);
    partial void OnPriceChanged();
    #endregion
		
		public Tbl_Order()
		{
			this._Tbl_Item = default(EntityRef<Tbl_Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_ID", DbType="Int NOT NULL")]
		public int Order_ID
		{
			get
			{
				return this._Order_ID;
			}
			set
			{
				if ((this._Order_ID != value))
				{
					this.OnOrder_IDChanging(value);
					this.SendPropertyChanging();
					this._Order_ID = value;
					this.SendPropertyChanged("Order_ID");
					this.OnOrder_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int NOT NULL")]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					if (this._Tbl_Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItem_IDChanging(value);
					this.SendPropertyChanging();
					this._Item_ID = value;
					this.SendPropertyChanged("Item_ID");
					this.OnItem_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tbl_Item_Tbl_Order", Storage="_Tbl_Item", ThisKey="Item_ID", OtherKey="ID", IsForeignKey=true)]
		public Tbl_Item Tbl_Item
		{
			get
			{
				return this._Tbl_Item.Entity;
			}
			set
			{
				Tbl_Item previousValue = this._Tbl_Item.Entity;
				if (((previousValue != value) 
							|| (this._Tbl_Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tbl_Item.Entity = null;
						previousValue.Tbl_Orders.Remove(this);
					}
					this._Tbl_Item.Entity = value;
					if ((value != null))
					{
						value.Tbl_Orders.Add(this);
						this._Item_ID = value.ID;
					}
					else
					{
						this._Item_ID = default(int);
					}
					this.SendPropertyChanged("Tbl_Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TablePlace")]
	public partial class TablePlace : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Tableplace1;
		
		private EntitySet<TBL_Number> _TBL_Numbers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTableplace1Changing(string value);
    partial void OnTableplace1Changed();
    #endregion
		
		public TablePlace()
		{
			this._TBL_Numbers = new EntitySet<TBL_Number>(new Action<TBL_Number>(this.attach_TBL_Numbers), new Action<TBL_Number>(this.detach_TBL_Numbers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Tableplace", Storage="_Tableplace1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Tableplace1
		{
			get
			{
				return this._Tableplace1;
			}
			set
			{
				if ((this._Tableplace1 != value))
				{
					this.OnTableplace1Changing(value);
					this.SendPropertyChanging();
					this._Tableplace1 = value;
					this.SendPropertyChanged("Tableplace1");
					this.OnTableplace1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TablePlace_TBL_Number", Storage="_TBL_Numbers", ThisKey="ID", OtherKey="TBLPlace_ID")]
		public EntitySet<TBL_Number> TBL_Numbers
		{
			get
			{
				return this._TBL_Numbers;
			}
			set
			{
				this._TBL_Numbers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TBL_Numbers(TBL_Number entity)
		{
			this.SendPropertyChanging();
			entity.TablePlace = this;
		}
		
		private void detach_TBL_Numbers(TBL_Number entity)
		{
			this.SendPropertyChanging();
			entity.TablePlace = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.item_order")]
	public partial class item_order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _item_id;
		
		private int _order_id;
		
		private double _total_cost;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<int> _TBL_Num;
		
		private System.Nullable<double> _discount_val;
		
		private System.Nullable<double> _Tax_val;
		
		private System.Nullable<double> _final_cost;
		
		private string _payment;
		
		private EntityRef<TBL_Number> _TBL_Number;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onitem_idChanging(int value);
    partial void Onitem_idChanged();
    partial void Onorder_idChanging(int value);
    partial void Onorder_idChanged();
    partial void Ontotal_costChanging(double value);
    partial void Ontotal_costChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnTBL_NumChanging(System.Nullable<int> value);
    partial void OnTBL_NumChanged();
    partial void Ondiscount_valChanging(System.Nullable<double> value);
    partial void Ondiscount_valChanged();
    partial void OnTax_valChanging(System.Nullable<double> value);
    partial void OnTax_valChanged();
    partial void Onfinal_costChanging(System.Nullable<double> value);
    partial void Onfinal_costChanged();
    partial void OnpaymentChanging(string value);
    partial void OnpaymentChanged();
    #endregion
		
		public item_order()
		{
			this._TBL_Number = default(EntityRef<TBL_Number>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_id", DbType="Int NOT NULL")]
		public int item_id
		{
			get
			{
				return this._item_id;
			}
			set
			{
				if ((this._item_id != value))
				{
					this.Onitem_idChanging(value);
					this.SendPropertyChanging();
					this._item_id = value;
					this.SendPropertyChanged("item_id");
					this.Onitem_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", DbType="Int NOT NULL")]
		public int order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_cost", DbType="Float NOT NULL")]
		public double total_cost
		{
			get
			{
				return this._total_cost;
			}
			set
			{
				if ((this._total_cost != value))
				{
					this.Ontotal_costChanging(value);
					this.SendPropertyChanging();
					this._total_cost = value;
					this.SendPropertyChanged("total_cost");
					this.Ontotal_costChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TBL_Num", DbType="Int")]
		public System.Nullable<int> TBL_Num
		{
			get
			{
				return this._TBL_Num;
			}
			set
			{
				if ((this._TBL_Num != value))
				{
					if (this._TBL_Number.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTBL_NumChanging(value);
					this.SendPropertyChanging();
					this._TBL_Num = value;
					this.SendPropertyChanged("TBL_Num");
					this.OnTBL_NumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount_val", DbType="Float")]
		public System.Nullable<double> discount_val
		{
			get
			{
				return this._discount_val;
			}
			set
			{
				if ((this._discount_val != value))
				{
					this.Ondiscount_valChanging(value);
					this.SendPropertyChanging();
					this._discount_val = value;
					this.SendPropertyChanged("discount_val");
					this.Ondiscount_valChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax_val", DbType="Float")]
		public System.Nullable<double> Tax_val
		{
			get
			{
				return this._Tax_val;
			}
			set
			{
				if ((this._Tax_val != value))
				{
					this.OnTax_valChanging(value);
					this.SendPropertyChanging();
					this._Tax_val = value;
					this.SendPropertyChanged("Tax_val");
					this.OnTax_valChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_final_cost", DbType="Float")]
		public System.Nullable<double> final_cost
		{
			get
			{
				return this._final_cost;
			}
			set
			{
				if ((this._final_cost != value))
				{
					this.Onfinal_costChanging(value);
					this.SendPropertyChanging();
					this._final_cost = value;
					this.SendPropertyChanged("final_cost");
					this.Onfinal_costChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment", DbType="NChar(10)")]
		public string payment
		{
			get
			{
				return this._payment;
			}
			set
			{
				if ((this._payment != value))
				{
					this.OnpaymentChanging(value);
					this.SendPropertyChanging();
					this._payment = value;
					this.SendPropertyChanged("payment");
					this.OnpaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_Number_item_order", Storage="_TBL_Number", ThisKey="TBL_Num", OtherKey="ID", IsForeignKey=true)]
		public TBL_Number TBL_Number
		{
			get
			{
				return this._TBL_Number.Entity;
			}
			set
			{
				TBL_Number previousValue = this._TBL_Number.Entity;
				if (((previousValue != value) 
							|| (this._TBL_Number.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_Number.Entity = null;
						previousValue.item_orders.Remove(this);
					}
					this._TBL_Number.Entity = value;
					if ((value != null))
					{
						value.item_orders.Add(this);
						this._TBL_Num = value.ID;
					}
					else
					{
						this._TBL_Num = default(Nullable<int>);
					}
					this.SendPropertyChanged("TBL_Number");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Casheir_name")]
	public partial class Tbl_Casheir_name : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Casheir;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCasheirChanging(string value);
    partial void OnCasheirChanged();
    #endregion
		
		public Tbl_Casheir_name()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Casheir", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Casheir
		{
			get
			{
				return this._Casheir;
			}
			set
			{
				if ((this._Casheir != value))
				{
					this.OnCasheirChanging(value);
					this.SendPropertyChanging();
					this._Casheir = value;
					this.SendPropertyChanged("Casheir");
					this.OnCasheirChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.item_order")]
	public partial class item_order1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _item_id;
		
		private int _order_id;
		
		private double _total_cost;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<int> _TBL_Num;
		
		private System.Nullable<double> _discount_val;
		
		private System.Nullable<double> _Tax_val;
		
		private System.Nullable<double> _final_cost;
		
		private string _payment;
		
		private EntityRef<TBL_Number> _TBL_Number;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onitem_idChanging(int value);
    partial void Onitem_idChanged();
    partial void Onorder_idChanging(int value);
    partial void Onorder_idChanged();
    partial void Ontotal_costChanging(double value);
    partial void Ontotal_costChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnTBL_NumChanging(System.Nullable<int> value);
    partial void OnTBL_NumChanged();
    partial void Ondiscount_valChanging(System.Nullable<double> value);
    partial void Ondiscount_valChanged();
    partial void OnTax_valChanging(System.Nullable<double> value);
    partial void OnTax_valChanged();
    partial void Onfinal_costChanging(System.Nullable<double> value);
    partial void Onfinal_costChanged();
    partial void OnpaymentChanging(string value);
    partial void OnpaymentChanged();
    #endregion
		
		public item_order1()
		{
			this._TBL_Number = default(EntityRef<TBL_Number>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_id", DbType="Int NOT NULL")]
		public int item_id
		{
			get
			{
				return this._item_id;
			}
			set
			{
				if ((this._item_id != value))
				{
					this.Onitem_idChanging(value);
					this.SendPropertyChanging();
					this._item_id = value;
					this.SendPropertyChanged("item_id");
					this.Onitem_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", DbType="Int NOT NULL")]
		public int order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_cost", DbType="Float NOT NULL")]
		public double total_cost
		{
			get
			{
				return this._total_cost;
			}
			set
			{
				if ((this._total_cost != value))
				{
					this.Ontotal_costChanging(value);
					this.SendPropertyChanging();
					this._total_cost = value;
					this.SendPropertyChanged("total_cost");
					this.Ontotal_costChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TBL_Num", DbType="Int")]
		public System.Nullable<int> TBL_Num
		{
			get
			{
				return this._TBL_Num;
			}
			set
			{
				if ((this._TBL_Num != value))
				{
					if (this._TBL_Number.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTBL_NumChanging(value);
					this.SendPropertyChanging();
					this._TBL_Num = value;
					this.SendPropertyChanged("TBL_Num");
					this.OnTBL_NumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount_val", DbType="Float")]
		public System.Nullable<double> discount_val
		{
			get
			{
				return this._discount_val;
			}
			set
			{
				if ((this._discount_val != value))
				{
					this.Ondiscount_valChanging(value);
					this.SendPropertyChanging();
					this._discount_val = value;
					this.SendPropertyChanged("discount_val");
					this.Ondiscount_valChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax_val", DbType="Float")]
		public System.Nullable<double> Tax_val
		{
			get
			{
				return this._Tax_val;
			}
			set
			{
				if ((this._Tax_val != value))
				{
					this.OnTax_valChanging(value);
					this.SendPropertyChanging();
					this._Tax_val = value;
					this.SendPropertyChanged("Tax_val");
					this.OnTax_valChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_final_cost", DbType="Float")]
		public System.Nullable<double> final_cost
		{
			get
			{
				return this._final_cost;
			}
			set
			{
				if ((this._final_cost != value))
				{
					this.Onfinal_costChanging(value);
					this.SendPropertyChanging();
					this._final_cost = value;
					this.SendPropertyChanged("final_cost");
					this.Onfinal_costChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment", DbType="NVarChar(50)")]
		public string payment
		{
			get
			{
				return this._payment;
			}
			set
			{
				if ((this._payment != value))
				{
					this.OnpaymentChanging(value);
					this.SendPropertyChanging();
					this._payment = value;
					this.SendPropertyChanged("payment");
					this.OnpaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_Number_item_order1", Storage="_TBL_Number", ThisKey="TBL_Num", OtherKey="ID", IsForeignKey=true)]
		public TBL_Number TBL_Number
		{
			get
			{
				return this._TBL_Number.Entity;
			}
			set
			{
				TBL_Number previousValue = this._TBL_Number.Entity;
				if (((previousValue != value) 
							|| (this._TBL_Number.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_Number.Entity = null;
						previousValue.item_order1s.Remove(this);
					}
					this._TBL_Number.Entity = value;
					if ((value != null))
					{
						value.item_order1s.Add(this);
						this._TBL_Num = value.ID;
					}
					else
					{
						this._TBL_Num = default(Nullable<int>);
					}
					this.SendPropertyChanged("TBL_Number");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tbl_Casheir_Sales")]
	public partial class Tbl_Casheir_Sale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Item_Name;
		
		private double _Item_Price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnItem_NameChanging(string value);
    partial void OnItem_NameChanged();
    partial void OnItem_PriceChanging(double value);
    partial void OnItem_PriceChanged();
    #endregion
		
		public Tbl_Casheir_Sale()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_Name", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string Item_Name
		{
			get
			{
				return this._Item_Name;
			}
			set
			{
				if ((this._Item_Name != value))
				{
					this.OnItem_NameChanging(value);
					this.SendPropertyChanging();
					this._Item_Name = value;
					this.SendPropertyChanged("Item_Name");
					this.OnItem_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_Price", DbType="Float NOT NULL")]
		public double Item_Price
		{
			get
			{
				return this._Item_Price;
			}
			set
			{
				if ((this._Item_Price != value))
				{
					this.OnItem_PriceChanging(value);
					this.SendPropertyChanging();
					this._Item_Price = value;
					this.SendPropertyChanged("Item_Price");
					this.OnItem_PriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class join_tables_report1Result
	{
		
		private int _ID;
		
		private string _Item_Name;
		
		private double _Item_Price;
		
		private int _ID1;
		
		private string _item_id;
		
		private int _order_id;
		
		private double _total_cost;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<int> _TBL_Num;
		
		private System.Nullable<double> _discount_val;
		
		private System.Nullable<double> _Tax_val;
		
		private System.Nullable<double> _final_cost;
		
		private string _payment;
		
		public join_tables_report1Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_Name", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string Item_Name
		{
			get
			{
				return this._Item_Name;
			}
			set
			{
				if ((this._Item_Name != value))
				{
					this._Item_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_Price", DbType="Float NOT NULL")]
		public double Item_Price
		{
			get
			{
				return this._Item_Price;
			}
			set
			{
				if ((this._Item_Price != value))
				{
					this._Item_Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID1", DbType="Int NOT NULL")]
		public int ID1
		{
			get
			{
				return this._ID1;
			}
			set
			{
				if ((this._ID1 != value))
				{
					this._ID1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_id", DbType="NChar(10)")]
		public string item_id
		{
			get
			{
				return this._item_id;
			}
			set
			{
				if ((this._item_id != value))
				{
					this._item_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", DbType="Int NOT NULL")]
		public int order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					this._order_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_cost", DbType="Float NOT NULL")]
		public double total_cost
		{
			get
			{
				return this._total_cost;
			}
			set
			{
				if ((this._total_cost != value))
				{
					this._total_cost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this._date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TBL_Num", DbType="Int")]
		public System.Nullable<int> TBL_Num
		{
			get
			{
				return this._TBL_Num;
			}
			set
			{
				if ((this._TBL_Num != value))
				{
					this._TBL_Num = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount_val", DbType="Float")]
		public System.Nullable<double> discount_val
		{
			get
			{
				return this._discount_val;
			}
			set
			{
				if ((this._discount_val != value))
				{
					this._discount_val = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax_val", DbType="Float")]
		public System.Nullable<double> Tax_val
		{
			get
			{
				return this._Tax_val;
			}
			set
			{
				if ((this._Tax_val != value))
				{
					this._Tax_val = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_final_cost", DbType="Float")]
		public System.Nullable<double> final_cost
		{
			get
			{
				return this._final_cost;
			}
			set
			{
				if ((this._final_cost != value))
				{
					this._final_cost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment", DbType="NVarChar(50)")]
		public string payment
		{
			get
			{
				return this._payment;
			}
			set
			{
				if ((this._payment != value))
				{
					this._payment = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
